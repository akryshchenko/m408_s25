[
  {
    "objectID": "ec.html",
    "href": "ec.html",
    "title": "Lectures",
    "section": "",
    "text": "Control Flow\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nControl Flow\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nR Basics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "lectures/1bS25.html#introduction-to-r",
    "href": "lectures/1bS25.html#introduction-to-r",
    "title": "R Basics",
    "section": "Introduction to R",
    "text": "Introduction to R"
  },
  {
    "objectID": "lectures/1bS25.html#r-packages",
    "href": "lectures/1bS25.html#r-packages",
    "title": "R Basics",
    "section": "R Packages",
    "text": "R Packages\n\nCore PackagesCourse PackagesMisc Packages\n\n\n\nTidyverse\ncsucistats\n\n\ninstall.packages('csucistats', \n  repos = c('https://inqs909.r-universe.dev', \n  'https://cloud.r-project.org'))\n\n\n\n\n\n\nISLR2\nleaps\ngam\ntree\n\n\n\ngbm\ne1071\nglmnet\ntorch\n\n\n\n\n\nRMarkdown\nQuarto\nextraInserts (GitHub Package)"
  },
  {
    "objectID": "lectures/1bS25.html#load-r-package",
    "href": "lectures/1bS25.html#load-r-package",
    "title": "R Basics",
    "section": "Load R Package",
    "text": "Load R Package\n\nlibrary(tidyverse)\nlibrary(torch)\n\n\nYou must load packages every new R Session"
  },
  {
    "objectID": "lectures/1bS25.html#r-as-a-calculator",
    "href": "lectures/1bS25.html#r-as-a-calculator",
    "title": "R Basics",
    "section": "R as a calculator",
    "text": "R as a calculator\nR can evaluate different expressions in the console tab.\nTry the following:\n\n\\(4(4+2)/34\\)\n\\(6^3\\)\n\\(3-1\\)\n\\(4+4/3+45(32*34-54)\\)"
  },
  {
    "objectID": "lectures/1bS25.html#r-calculator",
    "href": "lectures/1bS25.html#r-calculator",
    "title": "R Basics",
    "section": "R Calculator",
    "text": "R Calculator\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/1bS25.html#r-functions",
    "href": "lectures/1bS25.html#r-functions",
    "title": "R Basics",
    "section": "R Functions",
    "text": "R Functions\nR functions performs tasks to specific data values.\nEvaluate the following values in R:\n\n\\(\\sqrt{3}\\)\n\\(e^3\\)\n\\(\\ln(53)\\)\n\\(\\log(324)\\)\n\\(\\sin(3)\\)\n\\(\\sin(3\\pi)\\)"
  },
  {
    "objectID": "lectures/1bS25.html#r-functions-1",
    "href": "lectures/1bS25.html#r-functions-1",
    "title": "R Basics",
    "section": "R Functions",
    "text": "R Functions\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/1bS25.html#types-of-data",
    "href": "lectures/1bS25.html#types-of-data",
    "title": "R Basics",
    "section": "Types of Data",
    "text": "Types of Data\n\nNumeric\nCharacter\nLogical\nMissing\n\nEvaluate the following code:\n\nis.numeric(1)\nis.numeric(\"1\")\nis.numeric(T)\nis.numeric(NA)"
  },
  {
    "objectID": "lectures/1bS25.html#types-of-data-1",
    "href": "lectures/1bS25.html#types-of-data-1",
    "title": "R Basics",
    "section": "Types of Data",
    "text": "Types of Data\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/1bS25.html#types-of-objects",
    "href": "lectures/1bS25.html#types-of-objects",
    "title": "R Basics",
    "section": "Types of Objects",
    "text": "Types of Objects\nIn R, an object contains a set of data. The most common types are vectors and matrix.\nRun this code and print out the objects in the console:\n\nx &lt;- 3:34\ny &lt;- matrix(1:20, nrow = 4)"
  },
  {
    "objectID": "lectures/1bS25.html#types-of-objects-1",
    "href": "lectures/1bS25.html#types-of-objects-1",
    "title": "R Basics",
    "section": "Types of objects",
    "text": "Types of objects\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/1bS25.html#data-frames",
    "href": "lectures/1bS25.html#data-frames",
    "title": "R Basics",
    "section": "Data Frames",
    "text": "Data Frames\nData frames can be thought of as Râ€™s version of a data set.\nPlay around with mtcars:\n\nmtcars \n\n#&gt;                      mpg cyl  disp  hp drat    wt  qsec vs am gear carb\n#&gt; Mazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\n#&gt; Mazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\n#&gt; Datsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\n#&gt; Hornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\n#&gt; Hornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\n#&gt; Valiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\n#&gt; Duster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\n#&gt; Merc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\n#&gt; Merc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\n#&gt; Merc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\n#&gt; Merc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\n#&gt; Merc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\n#&gt; Merc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\n#&gt; Merc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\n#&gt; Cadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\n#&gt; Lincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\n#&gt; Chrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\n#&gt; Fiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\n#&gt; Honda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\n#&gt; Toyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\n#&gt; Toyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\n#&gt; Dodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\n#&gt; AMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\n#&gt; Camaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\n#&gt; Pontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\n#&gt; Fiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\n#&gt; Porsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\n#&gt; Lotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\n#&gt; Ford Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\n#&gt; Ferrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\n#&gt; Maserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\n#&gt; Volvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2"
  },
  {
    "objectID": "lectures/1bS25.html#lists",
    "href": "lectures/1bS25.html#lists",
    "title": "R Basics",
    "section": "Lists",
    "text": "Lists\nList can be thought as an extended vector, but each element is a different R object.\nTry playing with this R object:\n\nlist_one &lt;- list(mtcars, rep(0, 4),\n                 diag(rep(1, 3)))"
  },
  {
    "objectID": "lectures/1bS25.html#lists-1",
    "href": "lectures/1bS25.html#lists-1",
    "title": "R Basics",
    "section": "Lists",
    "text": "Lists\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "files/r-scripts/template.html#problem-2",
    "href": "files/r-scripts/template.html#problem-2",
    "title": "Title",
    "section": "Problem 2",
    "text": "Problem 2"
  },
  {
    "objectID": "files/r-scripts/template.html#problem-3",
    "href": "files/r-scripts/template.html#problem-3",
    "title": "Title",
    "section": "Problem 3",
    "text": "Problem 3"
  },
  {
    "objectID": "hw/hw2.html",
    "href": "hw/hw2.html",
    "title": "Homework 2",
    "section": "",
    "text": "Due 2/17/24 @ 11:59 PM\nUse an RMD M408 Template to create the assignment.\nYou must comment all your code to receive credit.\nSubmit the *.html file to canvas."
  },
  {
    "objectID": "hw/hw2.html#problem-1",
    "href": "hw/hw2.html#problem-1",
    "title": "Homework 2",
    "section": "Problem 1",
    "text": "Problem 1\nWrite a function that takes a vector as an input an returns a labeled list with the mean, median, and variance of the vector.\n\n\nAnswer\nxsummary &lt;- function(x){\n  list(mean = mean(x),\n       median = median(x),\n       variance = var(x))\n}"
  },
  {
    "objectID": "hw/hw2.html#problem-2",
    "href": "hw/hw2.html#problem-2",
    "title": "Homework 2",
    "section": "Problem 2",
    "text": "Problem 2\nWrite a function for the following equation:\n\\[\nf(x, y, z) =\\left\\{\\begin{array}{cc}\nx^2+\\sqrt y & z  = 0 \\\\\nx^2+2x+3+ \\log(y) & z = 1\n\\end{array}\\right.\n\\]\nInclude any error messages if necessary.\n\n\nAnswer\nfxyz &lt;- function(x, y, z){\n  if (!z %in% c(0,1)){stop(\"z must be 0 or 1\")}\n  if (y&lt;=0){stop(\"y must be greater than 0\")}\n  if (z ==0){\n    return(x^2+sqrt(y))\n  } else {\n    return(x^2 + 2*x + 3 + log(y))\n  }\n}"
  },
  {
    "objectID": "hw/hw2.html#problem-3",
    "href": "hw/hw2.html#problem-3",
    "title": "Homework 2",
    "section": "Problem 3",
    "text": "Problem 3\nCreate a function that will give you the first x Fibonacci numbers. You must use a for loop.\n\n\nAnswer\nfib &lt;- function(x){\n  post &lt;- c(0,1)\n  for(i in 3:x){\n    post &lt;- c(post, fib[i-2] + fib[i-1])\n  }\n  return(post)\n}"
  },
  {
    "objectID": "hw/hw2.html#problem-4",
    "href": "hw/hw2.html#problem-4",
    "title": "Homework 2",
    "section": "Problem 4",
    "text": "Problem 4\nCreate a function that will randomly generate n numbers that are greater than x from a \\(Pois(\\lambda)\\).\n\n\nAnswer\nnew_pois &lt;- function(n, x, lambda){\n  nn &lt;- 0\n  post &lt;- c()\n  while(nn &lt; n){\n    new &lt;- rpois(1, lambda)\n    if (new &gt; x){\n      post &lt;- c(post, new)\n      nn &lt;- length(post)\n    }\n  }\n  return(post)\n}"
  },
  {
    "objectID": "hw/hw1.html",
    "href": "hw/hw1.html",
    "title": "Homework 1",
    "section": "",
    "text": "Due 6/14/24 @ 11:59 PM\nYou must comment all your code to receive credit.\nSubmit the *.html file to canvas.\nFor all problems, you must use at least one for or while loop."
  },
  {
    "objectID": "hw/hw1.html#problem-1",
    "href": "hw/hw1.html#problem-1",
    "title": "Homework 1",
    "section": "Problem 1",
    "text": "Problem 1\nUsing the following code:\n\nx &lt;- matrix(rnorm(1500), nrow = 10)\n\nWrite the code to produce the output if you use the rowMeans() on the R object x."
  },
  {
    "objectID": "hw/hw1.html#problem-2",
    "href": "hw/hw1.html#problem-2",
    "title": "Homework 1",
    "section": "Problem 2",
    "text": "Problem 2\nUsing the following code:\n\ny &lt;- matrix(sample(1:400, 100, replace = T), nrow = 10)\n\nFind the median value for each column of the matrix y."
  },
  {
    "objectID": "hw/hw1.html#problem-3",
    "href": "hw/hw1.html#problem-3",
    "title": "Homework 1",
    "section": "Problem 3",
    "text": "Problem 3\nWrite the code that will generate the first 1000 numbers of the Fibonacci Sequence."
  },
  {
    "objectID": "hw/hw1.html#problem-4",
    "href": "hw/hw1.html#problem-4",
    "title": "Homework 1",
    "section": "Problem 4",
    "text": "Problem 4\nWrite a function for the following equation:\n\\[\nf(x, y, z) =\\left\\{\\begin{array}{cc}\nx^2+\\sqrt y & z  = 0 \\\\\nx^2+2x+3+ \\log(y) & z = 1\n\\end{array}\\right.\n\\]\nInclude any error messages if necessary."
  },
  {
    "objectID": "hw/hw1.html#problem-5",
    "href": "hw/hw1.html#problem-5",
    "title": "Homework 1",
    "section": "Problem 5",
    "text": "Problem 5\nCreate a function that will give you the first x Fibonacci numbers. You must use a for loop."
  },
  {
    "objectID": "lectures/2bS25.html#learning-objectives",
    "href": "lectures/2bS25.html#learning-objectives",
    "title": "Control Flow",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nNested for Loops"
  },
  {
    "objectID": "lectures/2bS25.html#nested-for-loops-1",
    "href": "lectures/2bS25.html#nested-for-loops-1",
    "title": "Control Flow",
    "section": "Nested for Loops",
    "text": "Nested for Loops\nNested for loops are for loops within another for loop. You can stack these loops as much as needed. Just make sure the index is different for each loop. The general format for a loop goes as follow:\n\nfor (i in vector_1){\n  for (ii in vector_2){\n    perform task\n  }\n}"
  },
  {
    "objectID": "lectures/2bS25.html#example",
    "href": "lectures/2bS25.html#example",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\nWithout using the sd() function, compute the standard deviation for each column of the matrix:\n\nx &lt;- matrix(rnorm(1000), nrow = 10)\n\n\\[\ns^2 = \\frac{1}{n-1}\\sum^n_{i=1}(x_i-\\bar x)^2\n\\]"
  },
  {
    "objectID": "lectures/2bS25.html#example-1",
    "href": "lectures/2bS25.html#example-1",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\nThe median() function obtain the median value of a vector. Write code to obtain the median value for any vector.\n\nx &lt;- rnorm(500)\ny &lt;- rnorm(501)\nmedian(x)\nmedian(y)\n\nAnswer:\n\n\nCode\nwk &lt;- x \npos50 &lt;- (length(wk) + 1) / 2\nswk &lt;- sort(wk)\nif ((length(wk) %% 2) == 0) {\n  val &lt;- (swk[floor(pos50)] + swk[ceiling(pos50)]) / 2\n} else {\n  val &lt;- swk[pos50]\n}\nprint(val)\nmedian(wk)\n\nwk &lt;- y \npos50 &lt;- (length(wk) + 1) / 2\nswk &lt;- sort(wk)\nif ((length(wk) %% 2) == 0) {\n  val &lt;- (swk[floor(pos50)] + swk[ceiling(pos50)]) / 2\n} else {\n  val &lt;- swk[pos50]\n}\nprint(val)\nmedian(wk)"
  },
  {
    "objectID": "lectures/2bS25.html#example-2",
    "href": "lectures/2bS25.html#example-2",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\nUsing the code below:\n\nx &lt;- rnorm(5000)\n\nCreate a new vector containing all the positive values of x. The new vector should be less than 5000.\nAnswer:\n\n\nCode\nnn &lt;- length(x)\npos &lt;- c()\nfor (i in 1:nn){\n  if (x[i] &gt; 0) {\n    pos &lt;- c(pos, x[i])\n  }\n}\npos"
  },
  {
    "objectID": "lectures/2bS25.html#example-3",
    "href": "lectures/2bS25.html#example-3",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\nCreate a vector reporting the data type of each variable in ISLR2::BrainCancer\n\nlibrary(ISLR2)\nBrainCancer\n\nAnswer:\n\n\nCode\nnn &lt;- ncol(BrainCancer)\ny &lt;- c()\nfor (i in 1:nn){\n  y &lt;- c(y, class(BrainCancer[,i]))\n}"
  },
  {
    "objectID": "lectures/2bS25.html#example-4",
    "href": "lectures/2bS25.html#example-4",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\n\\[\nf(x,y) = x^2 + y^2 + \\ln(x+y)\n\\]\nFind all the values of \\(f(x,y)\\) for every combination of \\(x \\in \\{1, 8, 13, 25, 42, 67, 95\\}\\) and \\(y \\in \\{6, 12, 18, 52, 61, 79, 83\\}\\)\nStore values in a \\(7\\times 7\\) matrix.\nAnswer:\n\n\nCode\nx &lt;- c(1, 8, 13, 25, 42, 67, 95)\ny &lt;- c(6, 12, 18, 52, 61, 79, 83)\nres &lt;- matrix(nrow = 7, ncol = 7)\ncolnames(res) &lt;- as.character(x)\nrownames(res) &lt;- as.character(y)\n\nfor (i in 1:7){\n  for (ii in 1:7){\n    res[ii,i] &lt;- x[i]^2 + y[ii]^2 + log(x[i] + y[ii])\n  }\n}\nprint(res)"
  },
  {
    "objectID": "lectures/2bS25.html#example-5",
    "href": "lectures/2bS25.html#example-5",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\nFor each column in mtcars, take the mean for the even columns, and median for the odd columns. Store the values in a list containing 2 vectors.\nAnswer:\n\n\nCode\nx &lt;- c()\ny &lt;- c()\nnn &lt;- ncol(mtcars)\nfor (i in 1:nn){\n  if (i %% 2 == 0){\n    x &lt;- c(x, mean(mtcars[,i]))\n  } else {\n    y &lt;- c(y, median(mtcars[,i]))\n  }\n}\n\nxy &lt;- list(x,y)"
  },
  {
    "objectID": "lectures/2aS25.html#anouncements",
    "href": "lectures/2aS25.html#anouncements",
    "title": "Control Flow",
    "section": "Anouncements",
    "text": "Anouncements\nQuarto Template for HW\n\n\n\n\n\n\n\nSave this in an empty source quarto document:\n\n---\ntitle: \"Title\"\nauthor: \"Name Here\"\ndate: \"`r format(Sys.time(),'%m-%d-%Y')`\"\nformat: \n  html:\n    toc: true\n    toc-depth: 2\n    code-fold: true\n    code-tools: true\n    code-line-numbers: true\nknitr:\n  opts_chunk:\n    echo: true\n    message: false\n    warning: false\n    error: true\n    tidy: styler\n    R.options:\n      digits: 3\n      max.print: 100\n---\n\n## Problem 1\n\n## Problem 2\n\n## Problem 3\n\nGuides:\n\nQuarto\nStatistical Computing"
  },
  {
    "objectID": "lectures/2aS25.html#learning-objectives",
    "href": "lectures/2aS25.html#learning-objectives",
    "title": "Control Flow",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\nControl Flow\nIndexing\nComparing Numbers\nif/else Statements\ntry()\nfor Statements"
  },
  {
    "objectID": "lectures/2aS25.html#control-flow",
    "href": "lectures/2aS25.html#control-flow",
    "title": "Control Flow",
    "section": "Control Flow",
    "text": "Control Flow\nThe order a computer will complete tasks.\nUsually incorporates statements and loops."
  },
  {
    "objectID": "lectures/2aS25.html#indexing-1",
    "href": "lectures/2aS25.html#indexing-1",
    "title": "Control Flow",
    "section": "Indexing",
    "text": "Indexing\nWithin an R object, you can access an element by indexing it.\nIndexing tells R which values to output."
  },
  {
    "objectID": "lectures/2aS25.html#vectors",
    "href": "lectures/2aS25.html#vectors",
    "title": "Control Flow",
    "section": "Vectors",
    "text": "Vectors\nA vector can be indexed by adding [] after the objectâ€™s name and specifying the number of each element.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#matrices",
    "href": "lectures/2aS25.html#matrices",
    "title": "Control Flow",
    "section": "Matrices",
    "text": "Matrices\nA matrix can be indexed by adding [] after the objectâ€™s name and specifying the number of each element. Separate the values by commas for specific indexes.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#data-frames",
    "href": "lectures/2aS25.html#data-frames",
    "title": "Control Flow",
    "section": "Data Frames",
    "text": "Data Frames\nData frames can be indexed using the $ operator and [].\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#lists",
    "href": "lectures/2aS25.html#lists",
    "title": "Control Flow",
    "section": "Lists",
    "text": "Lists\nLists can be indexed using the [[]] for a specific element of a list.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#comparing-numbers-1",
    "href": "lectures/2aS25.html#comparing-numbers-1",
    "title": "Control Flow",
    "section": "Comparing Numbers",
    "text": "Comparing Numbers\nYou can compare two numbers, or objects, that will result in a logical output."
  },
  {
    "objectID": "lectures/2aS25.html#comparing-numbers-operators",
    "href": "lectures/2aS25.html#comparing-numbers-operators",
    "title": "Control Flow",
    "section": "Comparing Numbers Operators",
    "text": "Comparing Numbers Operators\n\n\n\nOperator\nDescription\n\n\n\n\n&gt;\nGreater Than\n\n\n&lt;\nLess Than\n\n\n&gt;=\nGreater than or equal\n\n\n&lt;=\nLess than or equal\n\n\n==\nEquals\n\n\n!=\nNot Equals"
  },
  {
    "objectID": "lectures/2aS25.html#comparing-vectors",
    "href": "lectures/2aS25.html#comparing-vectors",
    "title": "Control Flow",
    "section": "Comparing Vectors",
    "text": "Comparing Vectors\nWhen you compare a number to a vector, it will result as a logical vector."
  },
  {
    "objectID": "lectures/2aS25.html#example",
    "href": "lectures/2aS25.html#example",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\nTry the following code and explain what is happening:\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#ifelse-statements-1",
    "href": "lectures/2aS25.html#ifelse-statements-1",
    "title": "Control Flow",
    "section": "if/else Statements",
    "text": "if/else Statements\nif/else statements are used to conduct specific tasks depending on the conditions"
  },
  {
    "objectID": "lectures/2aS25.html#if-statement",
    "href": "lectures/2aS25.html#if-statement",
    "title": "Control Flow",
    "section": "if Statement",
    "text": "if Statement\nAn if statement is used to if you want R to perform a specific function if a certain condition is met. An if statement will only run a task if a logical is returned. You will need type if, followed by the condition (as a logical) in parentheses, then the task."
  },
  {
    "objectID": "lectures/2aS25.html#example-1",
    "href": "lectures/2aS25.html#example-1",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#else-statement",
    "href": "lectures/2aS25.html#else-statement",
    "title": "Control Flow",
    "section": "else statement",
    "text": "else statement\nAn else statement will conduct a different task if the if statement does not conduct the tasks."
  },
  {
    "objectID": "lectures/2aS25.html#example-2",
    "href": "lectures/2aS25.html#example-2",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#chain-ifelse-statement",
    "href": "lectures/2aS25.html#chain-ifelse-statement",
    "title": "Control Flow",
    "section": "Chain if/else statement",
    "text": "Chain if/else statement\nIf you have more than two options, you can chain if/else statements by adding an if statement immediately after the word else."
  },
  {
    "objectID": "lectures/2aS25.html#example-3",
    "href": "lectures/2aS25.html#example-3",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#try-1",
    "href": "lectures/2aS25.html#try-1",
    "title": "Control Flow",
    "section": "try()",
    "text": "try()\nThe try() is an extremely powerful function that will prevent a code from stopping if an error occurs."
  },
  {
    "objectID": "lectures/2aS25.html#example-4",
    "href": "lectures/2aS25.html#example-4",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page."
  },
  {
    "objectID": "lectures/2aS25.html#for-loops-1",
    "href": "lectures/2aS25.html#for-loops-1",
    "title": "Control Flow",
    "section": "for Loops",
    "text": "for Loops\nfor loops are used to conduct an iterative task with slight changes to the input. The general format goes as follows:\n\nfor (index in vector){\n  Conduct task\n}\n\nYou will repeat the for loop untie all the elements in the vector have been used."
  },
  {
    "objectID": "lectures/2aS25.html#example-5",
    "href": "lectures/2aS25.html#example-5",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\nCompute the mean:\n\\[\n\\bar x = \\frac{1}{n}\\sum^n_{i=1}x_i\n\\]\n\nx &lt;- rnorm(100)\nmean(x)\n\n#&gt; [1] 0.05162771"
  },
  {
    "objectID": "lectures/2aS25.html#example-6",
    "href": "lectures/2aS25.html#example-6",
    "title": "Control Flow",
    "section": "Example",
    "text": "Example\nCompute the variance:\n\\[\ns^2 = \\frac{1}{n-1}\\sum^n_{i-1}(x_i-\\bar x)^2\n\\]\n\nx &lt;- rnorm(100)\nvar(x)\n\n#&gt; [1] 1.174041"
  }
]